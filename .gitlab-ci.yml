
stages:
  - test
  - build
  - deploy

test:
  image: "python:$VERSION"
  stage: test
  script:
    - apt -y update
    - pip install poetry && poetry config virtualenvs.create false
    - make prepare-dev
    - source .milespy
    - make install-dev
    - MILESPY_AUTO_DOWNLOAD=1 MILESPY_REPOSITORY_FOLDER=/tmp/ make tests
  artifacts:
    when: always
    paths:
      - test_results/
  parallel:
    matrix:
      - VERSION: ['3.8', '3.9', '3.10', '3.11', '3.12']

build-doc:
  image: python:3.10
  stage: build
  script:
    - apt -y update
    - apt-get -y install pandoc
    - pip install poetry && poetry config virtualenvs.create false
    - make prepare-dev
    - source .milespy
    - make install-dev
    - poetry run pip install jupyter
    - make doc


package:
  only:
    - tags
  image: python:3.10
  stage: deploy
  script:
    - python3 -m pip install twine
    - python3 -m pip install poetry
    - poetry build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python3 -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
